{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","users","map","find","u","App","useState","todosFromServer","todosArr","setTodosArr","userSelect","formData","setFormData","errors","setErrors","handleChange","event","target","value","prevErrors","prevFormData","action","method","onSubmit","preventDefault","titleError","userSelectError","prevTodos","newTodo","Math","max","Number","htmlFor","type","placeholder","onChange","disabled","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b856a8aa.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types';\n\ninterface UserInfoProps {\n  user?: User;\n}\n\nexport default function UserInfo({ user }: UserInfoProps) {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n}\n","import UserInfo from '../UserInfo/UserInfo';\nimport { User, Todo } from '../../types';\n\ninterface TodoInfoProps {\n  todo: Todo;\n  user?: User;\n}\n\nexport default function TodoInfo({ todo, user }: TodoInfoProps) {\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      <UserInfo user={user} />\n    </article>\n  );\n}\n","import TodoInfo from '../TodoInfo/TodoInfo';\nimport { User, Todo } from '../../types';\n\ninterface TodoListProps {\n  todos: Todo[];\n  users: User[];\n}\n\nexport default function TodoList({ todos, users }: TodoListProps) {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        const user = users.find(u => u.id === todo.userId);\n\n        return <TodoInfo key={todo.id} todo={todo} user={user} />;\n      })}\n    </section>\n  );\n}\n","/* eslint-disable max-len */\nimport './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport TodoList from './components/TodoList/TodoList';\n\nexport const App = () => {\n  const [todosArr, setTodosArr] = useState(todosFromServer);\n  const [formData, setFormData] = useState({ title: '', userSelect: '0' });\n  const [errors, setErrors] = useState({ title: false, userSelect: false });\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n    const { name, value } = event.target;\n\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: false,\n    }));\n\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  }\n\n  function handleSumbit(event: React.FormEvent) {\n    event.preventDefault();\n\n    const titleError = !formData.title;\n    const userSelectError = formData.userSelect === '0';\n\n    if (titleError || userSelectError) {\n      setErrors({ title: titleError, userSelect: userSelectError });\n\n      return;\n    }\n\n    setTodosArr(prevTodos => {\n      const nextId = Math.max(...prevTodos.map(todo => todo.id)) + 1;\n\n      const newTodo = {\n        id: nextId,\n        title: formData.title,\n        userId: Number(formData.userSelect),\n        completed: false,\n      };\n\n      return [...prevTodos, newTodo];\n    });\n\n    setFormData({ title: '', userSelect: '0' });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSumbit}>\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            id=\"titleInput\"\n            data-cy=\"titleInput\"\n            value={formData.title}\n            onChange={handleChange}\n          />\n          {errors.title && <span className=\"error\"> Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={formData.userSelect}\n            data-cy=\"userSelect\"\n            onChange={handleChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {errors.userSelect && <span className=\"error\"> Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todosArr} users={usersFromServer} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}